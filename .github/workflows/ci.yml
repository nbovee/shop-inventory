name: CI Pipeline

on:
  push:
    branches:
      - main
    tags:
      - "*"
    paths-ignore:
      - "*.md"
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/ruff-action@v1
      - uses: astral-sh/ruff-action@v1
        with:
          args: format --check

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.5"
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ".python-version"
      - name: Install dependencies
        run: uv sync
      - name: Run tests
        run: |
          uv run pytest
      - name: Submit coverage report
        uses: coverallsapp/github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Raspberry Pi Image
        uses: usimd/pi-gen-action@v1
        with:
          # If you require the use of an apt proxy, set it here. This proxy setting will not
          # be included in the image, making it safe to use an apt-cacher or similar package
          # for development.
          apt-proxy: ""

          # Compression to apply on final image (either "none", "zip", "xz" or "gz").
          compression: zip

          # Compression level to be used. From 0 to 9 (refer to the tool man page for more
          # information on this. Usually 0 is no compression but very fast, up to 9 with the
          # best compression but very slow).
          compression-level: 6

          # Disable the renaming of the first user during the first boot. This make it so
          # 'username' stays activated. 'username' must be set for this to work. Please be
          # aware of the implied security risk of defining a default username and password
          # for your devices.
          disable-first-boot-user-rename: 0

          # Additional options to include in PIGEN_DOCKER_OPTS
          docker-opts: ""

          # Set whether a NOOBS image should be built as well. If enabled, the output
          # directory containing the NOOBS files will be saved as output variable
          # 'image-noobs-path'.
          enable-noobs: false

          # Enable SSH access to Pi.
          enable-ssh: 1

          # If this feature is enabled, the action will configure pi-gen to not export any
          # stage as image but the last one defined in property 'stage-list'. This is
          # helpful when building a single image flavor (in contrast to building a
          # lite/server and full-blown desktop image), since it speeds up the build process
          # significantly.
          export-last-stage-only: true

          # Comma or whitespace separated list of additional packages to install on host
          # before running pi-gen. Use this list to add any packages your custom stages may
          # require. Note that this is not affecting the final image. In order to add
          # additional packages, you need to add a respective 'XX-packages' file in your
          # custom stage.
          extra-host-dependencies: ""

          # Comma or whitespace separated list of additional modules to load on host before
          # running pi-gen. If your custom stage requires additional software or kernel
          # modules to be loaded, add them here. Note that this is not meant to configure
          # modules to be loaded in the target image.
          extra-host-modules: ""

          # Token to use for checking out pi-gen repo.
          github-token: ${{ github.token }}

          # Host name of the image.
          hostname: shop-inventory

          # Final image name.
          image-name: "shop-inventory"

          # Enabling this option will remove plenty of components from the GitHub Actions
          # runner that are not mandatory pre-requisites for a (vanilla) pi-gen build. This
          # shall increase the available disk space so that also large images can be
          # compiled on a free GHA runner (benchmark is the full image including a desktop
          # environment). If any packages are missing during the build consider adding them
          # to the `extra-host-dependencies` list.
          increase-runner-disk-size: false

          # Default keyboard keymap.
          keyboard-keymap: gb

          # Default keyboard layout.
          keyboard-layout: English (UK)

          # Default locale of the system image.
          locale: en_GB.UTF-8

          # Password of the intial user account, locked if empty.
          password: ""

          # Path where selected pi-gen ref will be checked out to. If the path does not yet
          # exist, it will be created (including its parents).
          pi-gen-dir: pi-gen

          # The release name to use in `/etc/issue.txt`. The default should only be used for
          # official Raspberry Pi builds.
          pi-gen-release: Raspberry Pi reference

          # GitHub repository to fetch pi-gen from, must be a fork from RPi-Distro/pi-gen.
          pi-gen-repository: RPi-Distro/pi-gen

          # Release version of pi-gen to use. This can both be a branch or tag name known in
          # the pi-gen repository.
          pi-gen-version: arm64

          # Setting to `1` will disable password authentication for SSH and enable public
          # key authentication. Note that if SSH is not enabled this will take effect when
          # SSH becomes enabled.
          pubkey-only-ssh: 0

          # Setting this to a value will make that value the contents of the
          # FIRST_USER_NAME's ~/.ssh/authorized_keys. Obviously the value should therefore
          # be a valid authorized_keys file. Note that this does not automatically enable
          # SSH.
          pubkey-ssh-first-user: ""

          # The release version to build images against. Valid values are jessie, stretch,
          # buster, bullseye, bookworm, and testing.
          release: bookworm

          # Setting to `1` will prevent pi-gen from dropping the "capabilities" feature.
          # Generating the root filesystem with capabilities enabled and running it from a
          # filesystem that does not support capabilities (like NFS) can cause issues. Only
          # enable this if you understand what it is.
          setfcap: ""

          # List of stage name to execute in given order. Relative and absolute paths to
          # custom stage directories are allowed here. Note that by default pi-gen exports
          # images in stage2 (lite), stage4 and stage5. You probably want to hook in custom
          # stages before one of the exported stages. Otherwise, the action will make sure
          # any custom stage will include an image export directive.
          stage-list: stage0 stage1 stage2

          # System timezone.
          timezone: Europe/London

          # Name of the initial user account.
          username: pi

          # Print all output from pi-gen.
          verbose-output: false

          # Wifi country code of default network to connect to.
          wpa-country: ""

          # SSID of a default wifi network to connect to.
          wpa-essid: ""

          # Password of default wifi network to connect to.
          wpa-password: ""
