{
  "version": "2.0.0",
  "tasks": [
    {
      "type": "docker-build",
      "label": "docker-build",
      "platform": "python",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "dockerBuild": {
        "tag": "shop-inventory:master",
        "dockerfile": "${workspaceFolder}/.vscode/Dockerfile",
        "context": "${workspaceFolder}",
        "pull": true
      }
    },
    {
      "type": "shell",
      "label": "shell: pytest.sh",
      "dependsOn": ["docker-build"],
      "command": "docker run --rm shop-inventory:master ./pytest.sh",
      "problemMatcher": []
    },
    {
      // shell is used here as vscode keeps docker-run tasks running for debugpy. This would then be reserving the default container name, blocking future tasks.
      "type": "shell",
      "label": "shell: ensure superuser",
      "dependsOn": ["docker-build"],
      "command": "docker run --rm -v sqlite:/sqlite shop-inventory:master python manage.py safecreatesuperuser --no-input",
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "shell: uv pip compile",
      "command": "uv pip compile -o stageCustom/00-shop/files/requirements.txt pyproject.toml",
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "shop-inventory: debug-compose-up",
      "command": "docker-compose -f docker-compose.debug.yml up --build -d",
      "presentation": {
        "group": "docker",
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "shop-inventory: wait-for-launch",
      "dependsOn": "shop-inventory: debug-compose-up",
      "command": "sleep 3",
      "presentation": {
        "group": "docker",
        "showReuseMessage": false
      },
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "shop-inventory: debug-compose-down",
      "command": "docker-compose -f docker-compose.debug.yml down",
      "presentation": {
        "group": "docker",
        "reveal": "silent"
      },
      "problemMatcher": []
    },
    {
      "type": "shell",
      "label": "django: makemigrations with app",
      "command": "${workspaceFolder}/src/shop-inventory/manage.py makemigrations ${input:djangoApp}",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "type": "shell",
      "label": "django: migrate with app",
      "command": "${workspaceFolder}/src/shop-inventory/manage.py migrate ${input:djangoApp}",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    }
  ],
  "inputs": [
    {
      "id": "djangoApp",
      "description": "Django app name (leave empty for all apps)",
      "default": "",
      "type": "promptString"
    }
  ]
}
